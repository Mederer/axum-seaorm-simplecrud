//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use std::fmt::Display;

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub firstname: String,
    pub lastname: String,
    pub email: String,
    pub secret: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl Display for Model {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "User(id: {}, firstname: {}, lastname: {}, email: {})",
            self.id, self.firstname, self.lastname, self.email
        )
    }
}
